version: '3.7'

services:
#  api:
#    ports:
#      - ${API_PORT:-4000}:3000

#  ca:
#    ports:
#      - ${CA_PORT:-7054}:7054 # debug only

  certs.generate:
    image: ${DOCKER_REGISTRY:-docker.io}/olegabu/fabric-starter-rest:${FABRIC_STARTER_VERSION:-latest}
    container_name: certs.${ORG:-org1}.${DOMAIN:-example.com}
    environment:
      - CERT_ORG=${ORG:-org1}.${DOMAIN:-example.com}
      - CERT_DAYS=${CERT_DAYS:-1825}
      - CERT_COUNTRY=${CERT_COUNTRY:-RU}
      - CERT_STATE=${CERT_STATE:-N/A}
      - CERT_ORGANIZATIONAL_UNIT=${CERT_ORGANIZATIONAL_UNIT:-Hyperledger Fabric Blockchain}
      - CERT_COMMON_NAME=${CERT_COMMON_NAME:-Fabric-Starter-Rest-API}
    command: bash -c "if [ ! -f '/certs/public.crt' ]; then openssl req -new -newkey rsa:4096 -x509 -sha256 -days $${CERT_DAYS} -nodes -out /certs/public.crt -keyout /certs/private.key -config /templates/ssl-cert.conf; fi"
    volumes:
      - ./templates:/templates:ro
      - ${SSL_CERTS_PATH:-./ssl-certs}:/certs

  peer0:
    ports:
      - ${PEER0_PORT:-7051}:7051
      - ${PEER0_EVENT_PORT:-7053}:7053

  # simple http server to disseminate certificates
  www.peer:
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
    ports:
      - ${WWW_PORT:-80}:80
      - ${API_PORT:-4000}:4000
    volumes:
      - ./templates:/templates:ro
      - ${SSL_CERTS_PATH:-./ssl-certs}:/certs
    command: bash -c "envsubst '$$ORG $$DOMAIN' < /templates/nginx.conf > /etc/nginx/conf.d/default.conf && cp /certs/* /etc/nginx/conf.d/ && nginx -g 'daemon off;'"
    depends_on:
      - certs.generate
      - api